<section class="m-10 lg:mx-40 md:flex">
  <div class="md:w-1/2">
    <div class="md:float-right">{{ product | image_url: width: 900, height: 900 | image_tag }}</div>
  </div>
  <div class="md:w-1/2 my-10 md:mt-0 md:ml-10">
    <h2 class="text-3xl mb-6">{{ product.title }}</h2>
    {% comment %} how to dynamically re-render the variant.price here? {% endcomment %}
    <h3 id="price" class="text-xl text-amber-500 mb-6">{{ product.price | money }}</h3>

    {% form 'product', product %}
      <div class="flex justify-between">
        <label class="mr-6 md:block" for="quantity">Quantity:</label>
        <input
          class="bg-hed hover:bg-amber-500 border-2 rounded-sm mb-6 p-2"
          type="text"
          name="quantity"
          min="1"
          value="1"
          id="quantity"
        >
      </div>

      <div class="flex justify-between">
        <label class="mr-14 md:block" for="size">Size:</label>
        <select
          class="bg-hed hover:bg-amber-500 active:text-black border-2 rounded-sm mb-8 p-2 w-[197px] md:w-[243px]"
          name="id"
          id="ProductSelect-{{ section.id }}"
          class="product-form__variants no-js"
          onChange="updatePrice(this);"
        >
          {% for variant in product.variants %}
            {% if variant.available %}
              <option
                value="{{ variant.id }}"
                {% if variant == product.selected_or_first_available_variant %}
                  selected="selected"
                {% endif %}
              >
                {{ variant.title }}
              </option>
            {% else %}
              <option disabled="disabled">{{ variant.title }} - {{ 'products.product.sold_out' | t }}</option>
            {% endif %}
          {% endfor %}
        </select>
      </div>

      <input
        class="block w-full bg-slate-900 hover:bg-amber-500 border-2 rounded-sm p-2 mx-auto mb-6"
        type="submit"
        value="Add to cart"
      >
      {% comment %} <div class="mx-auto mb-6">{{ form | payment_button }}</div> {% endcomment %}
    {% endform %}

    <p class="mb-6">{{ product.description }}</p>
  </div>
</section>

{% comment %}
   <div
    class="product-recommendations"
    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4&intent=related"
  >
    {%- if recommendations.performed and recommendations.products_count > 0 -%}
      {% if recommendations.intent == 'related' %}
        <h2>You may also like</h2>
      {% elsif recommendations.intent == 'complementary' %}
        <h2>Pair it with</h2>
      {% endif %}

      <ul>
        {%- for product in recommendations.products -%}
          <li class="product">
            <a href="{{ product.url }}">
              <img
                class="product__img"
                src="{{ product.featured_image | image_url: width: 300, height: 300 }}"
                alt="{{ product.featured_image.alt }}"
              >

              <p class="product__title">{{ product.title }}</p>
              <p class="product__price">{{ product.price | money }}</p>
            </a>
          </li>
        {%- endfor -%}
      </ul>
    {%- endif -%}
  </div>
{% endcomment %}
{% comment %}
   {% javascript %}
    const handleIntersection = (entries, observer) => {
      if (!entries[0].isIntersecting) return;

      observer.unobserve(productRecommendationsSection);

      const url = productRecommendationsSection.dataset.url;

      fetch(url)
        .then((response) => response.text())
        .then((text) => {
          const html = document.createElement('div');
          html.innerHTML = text;
          const recommendations = html.querySelector('.product-recommendations');

          if (recommendations && recommendations.innerHTML.trim().length) {
            productRecommendationsSection.innerHTML = recommendations.innerHTML;
          }
        })
        .catch((e) => {
          console.error(e);
        });
    };

    const productRecommendationsSection = document.querySelector('.product-recommendations');
    const observer = new IntersectionObserver(handleIntersection, { rootMargin: '0px 0px 200px 0px' });

    observer.observe(productRecommendationsSection);
  {% endjavascript %}
{% endcomment %}

{% capture variantsString %}
  {% for variant in product.variants %}
    "{{ variant.id }}":"{{ variant.price }}"{% if forloop.last != true %},{% endif %}
  {% endfor %}
{% endcapture %}
{% assign variantsString = variantsString | prepend: '{' | append: '}' %}
<script>
  let variantString = JSON.parse({{ variantsString | strip_newlines | json }});
</script>

{% schema %}
{
  "name": "Product recommendations",
  "settings": []
}
{% endschema %}
